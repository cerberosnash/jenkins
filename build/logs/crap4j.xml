<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project></project>
  <timestamp>2015-01-17 04:38:08</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>34</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>54</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($currencyCode)</methodSignature>
      <fullMethod>__construct($currencyCode)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>addCurrency</methodName>
      <methodSignature>addCurrency($code, $displayName, $numericCode, $defaultFractionDigits, $subUnit)</methodSignature>
      <fullMethod>addCurrency($code, $displayName, $numericCode, $defaultFractionDigits, $subUnit)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>getCurrencyCode</methodName>
      <methodSignature>getCurrencyCode()</methodSignature>
      <fullMethod>getCurrencyCode()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>getDefaultFractionDigits</methodName>
      <methodSignature>getDefaultFractionDigits()</methodSignature>
      <fullMethod>getDefaultFractionDigits()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>getDisplayName</methodName>
      <methodSignature>getDisplayName()</methodSignature>
      <fullMethod>getDisplayName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>getNumericCode</methodName>
      <methodSignature>getNumericCode()</methodSignature>
      <fullMethod>getNumericCode()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>getSubUnit</methodName>
      <methodSignature>getSubUnit()</methodSignature>
      <fullMethod>getSubUnit()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Currency</className>
      <methodName>__toString</methodName>
      <methodSignature>__toString()</methodSignature>
      <fullMethod>__toString()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntlFormatter</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($locale)</methodSignature>
      <fullMethod>__construct($locale)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntlFormatter</className>
      <methodName>format</methodName>
      <methodSignature>format(Money $money)</methodSignature>
      <fullMethod>format(Money $money)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($amount, $currency)</methodSignature>
      <fullMethod>__construct($amount, $currency)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>fromString</methodName>
      <methodSignature>fromString($value, $currency)</methodSignature>
      <fullMethod>fromString($value, $currency)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>jsonSerialize</methodName>
      <methodSignature>jsonSerialize()</methodSignature>
      <fullMethod>jsonSerialize()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>getAmount</methodName>
      <methodSignature>getAmount()</methodSignature>
      <fullMethod>getAmount()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>getCurrency</methodName>
      <methodSignature>getCurrency()</methodSignature>
      <fullMethod>getCurrency()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>add</methodName>
      <methodSignature>add(Money $other)</methodSignature>
      <fullMethod>add(Money $other)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>subtract</methodName>
      <methodSignature>subtract(Money $other)</methodSignature>
      <fullMethod>subtract(Money $other)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>negate</methodName>
      <methodSignature>negate()</methodSignature>
      <fullMethod>negate()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>multiply</methodName>
      <methodSignature>multiply($factor, $roundingMode = PHP_ROUND_HALF_UP)</methodSignature>
      <fullMethod>multiply($factor, $roundingMode = PHP_ROUND_HALF_UP)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>allocateToTargets</methodName>
      <methodSignature>allocateToTargets($n)</methodSignature>
      <fullMethod>allocateToTargets($n)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>allocateByRatios</methodName>
      <methodSignature>allocateByRatios(array $ratios)</methodSignature>
      <fullMethod>allocateByRatios(array $ratios)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>extractPercentage</methodName>
      <methodSignature>extractPercentage($percentage, $roundingMode = PHP_ROUND_HALF_UP)</methodSignature>
      <fullMethod>extractPercentage($percentage, $roundingMode = PHP_ROUND_HALF_UP)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>compareTo</methodName>
      <methodSignature>compareTo(Money $other)</methodSignature>
      <fullMethod>compareTo(Money $other)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>equals</methodName>
      <methodSignature>equals(Money $other)</methodSignature>
      <fullMethod>equals(Money $other)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>greaterThan</methodName>
      <methodSignature>greaterThan(Money $other)</methodSignature>
      <fullMethod>greaterThan(Money $other)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>greaterThanOrEqual</methodName>
      <methodSignature>greaterThanOrEqual(Money $other)</methodSignature>
      <fullMethod>greaterThanOrEqual(Money $other)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>lessThan</methodName>
      <methodSignature>lessThan(Money $other)</methodSignature>
      <fullMethod>lessThan(Money $other)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>lessThanOrEqual</methodName>
      <methodSignature>lessThanOrEqual(Money $other)</methodSignature>
      <fullMethod>lessThanOrEqual(Money $other)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>assertSameCurrency</methodName>
      <methodSignature>assertSameCurrency(Money $a, Money $b)</methodSignature>
      <fullMethod>assertSameCurrency(Money $a, Money $b)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>assertIsInteger</methodName>
      <methodSignature>assertIsInteger($amount)</methodSignature>
      <fullMethod>assertIsInteger($amount)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>assertInsideIntegerBounds</methodName>
      <methodSignature>assertInsideIntegerBounds($amount)</methodSignature>
      <fullMethod>assertInsideIntegerBounds($amount)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>castToInt</methodName>
      <methodSignature>castToInt($amount)</methodSignature>
      <fullMethod>castToInt($amount)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>newMoney</methodName>
      <methodSignature>newMoney($amount)</methodSignature>
      <fullMethod>newMoney($amount)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Money</className>
      <methodName>handleCurrencyArgument</methodName>
      <methodSignature>handleCurrencyArgument($currency)</methodSignature>
      <fullMethod>handleCurrencyArgument($currency)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
